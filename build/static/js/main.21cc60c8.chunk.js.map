{"version":3,"sources":["Calculator.js","FormValidator.js","App.js","serviceWorker.js","index.js"],"names":["money","accounting","format","Calculator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Container","className","Row","Col","noValidate","data","payment","monthlyPropTax","monthlyInsurance","monthlyHoa","totalPayment","Component","numRegex","RegExp","intRegex","FormValidator","homePrice","downPayment","loanTerm","interestRate","propTax","insurance","hoa","submitted","formErrors","homePriceError","downPaymentError","loanTermError","interestRateError","propTaxError","insuranceError","hoaError","initialState","handleChange","bind","assertThisInitialized","handleSubmit","validate","reset","_this$state","principal","parseInt","num","parseFloat","denom1","denom2","monthly_payment","Math","pow","moPropTax","moInsurance","moHoa","setState","e","preventDefault","console","log","concat","calcResult","_this$setState","_e$target","target","name","value","objectSpread","test","defineProperty","_ref","valid","objectWithoutProperties","values","forEach","val","length","_this2","onSubmit","index_es","icon","faCalculator","type","placeholder","onChange","Button","onClick","src_Calculator_0","App","fluid","src_FormValidator_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21cc60c8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Calculator.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport accounting from 'accounting-js'\n\nlet money = accounting.format;\n\n\n\n  class Calculator extends Component{\n    \n    \n    \n    constructor(props){\n        super(props);\n        this.state = {\n        }\n    }\n    \n    \n    render(){\n\n\n        return(\n                <Container className=\"form-wrapper-calc form-wrapper-width\">\n                    <Row>\n                        <Col>\n                            <form className=\"m-4\" noValidate >\n                                <h3>Your Payment</h3>\n                                <div >\n                                    Principal + Interest: { this.props.data.payment ? money(this.props.data.payment) : null }\n                                </div>\n                                <div >\n                                    Taxes: { this.props.data.monthlyPropTax ? money(this.props.data.monthlyPropTax) : null }\n                                </div>\n                                <div >\n                                    Insurance: { this.props.data.monthlyInsurance ? money(this.props.data.monthlyInsurance) : null }\n                                </div>\n                                <div >\n                                    HOA: { this.props.data.monthlyHoa ? money(this.props.data.monthlyHoa) : null }\n                                </div>\n                                <div className='payment' >\n                                    Est. Monthly Payment: <b> { this.props.data.totalPayment ? money(this.props.data.totalPayment) : null } </b>\n                                </div>\n                            </form>\n                        </Col>\n                    </Row>\n                </Container>\n        );\n    }\n}\n\nexport default Calculator","import React, { Component } from 'react';\nimport './FormValidator.css';\nimport { Button, Container, Row, Col } from 'react-bootstrap';\nimport Calculator from './Calculator.js'\n// import accounting from 'accounting-js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons'\n\n\n// let money = accounting.format;\n\nconst numRegex = new RegExp(\n    /^(\\d+)+(\\.?\\d*)?$/\n  \n);\nconst intRegex = new RegExp(\n    /^[0-9]*$/\n  \n);\n\n\n  class FormValidator extends Component{\n    \n    \n    \n    constructor(props){\n        super(props);\n        this.state = {\n            homePrice: \"\",\n            downPayment: \"\",\n            loanTerm: \"\",\n            interestRate: \"\",\n            propTax: \"\",\n            monthlyPropTax: \"\",\n            insurance: \"\",\n            monthlyInsurance: \"\",\n            hoa: \"\",\n            monthlyHoa: \"\",\n            payment: null,\n            totalPayment: null,\n            submitted: false,\n            formErrors: {\n                homePriceError:'',\n                downPaymentError:'',\n                loanTermError:'',\n                interestRateError:'',\n                propTaxError:'',\n                insuranceError:'',\n                hoaError:'',\n            },\n        }\n        \n        this.initialState = this.state;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.validate = this.validate.bind(this);\n        this.reset = this.reset.bind(this);\n    }\n\n\n    \n    calcResult(){\n        const {homePrice, downPayment, loanTerm, interestRate, payment, propTax, insurance, hoa} = this.state\n        let principal = parseInt(homePrice) - parseInt(downPayment);\n        let num = (  (parseFloat(interestRate) / 100) / 12 ) * principal;\n        let denom1 = (1 + ( (parseFloat(interestRate)/100) / 12))\n        let denom2 = -(parseInt(loanTerm)*12)  \n        let denom3 = Math.pow(denom1,denom2)\n        let denom = 1- denom3;\n        let monthly_payment = num / denom;\n\n        // console.log(`interest + principal:  ${money(monthly_payment)}`)\n\n        let moPropTax = parseFloat(propTax) / 12;\n        let moInsurance = parseFloat(insurance) / 12;\n        let moHoa =  parseFloat(hoa);\n\n        let totalPayment = monthly_payment + moPropTax + moInsurance + moHoa;\n\n        this.setState({\n            payment:monthly_payment,\n            monthlyPropTax: moPropTax,\n            monthlyInsurance: moInsurance,\n            monthlyHoa: moHoa,\n            totalPayment\n        });\n\n        return payment\n\n    }\n    \n    handleSubmit(e){\n        e.preventDefault();\n        const isValid = this.validate(this.state);\n        if(isValid){\n            // const { open } = this.state;\n            this.setState({ submitted: true },\n                console.log(`submitted?: ${this.state.submitted}`))\n            console.log(this.state);\n            \n            this.calcResult();\n\n        }else{\n            console.log('invalid input')\n        }\n        \n    }\n\n    handleChange(e){\n        const {name, value} = e.target\n\n        let formErrors = {...this.state.formErrors}\n        \n        console.log(name);\n        console.log(value)\n\n\n        switch(name){\n\n            case 'homePrice':\n                if(numRegex.test(value)){\n                    \n                    formErrors.homePriceError = ''\n                    console.log('in homePriceValidator+')\n                    break;\n                }else{\n\n                    formErrors.homePriceError = 'Please enter a valid number'\n                    console.log('in homePriceValidator-')\n                    break;\n                }\n            case 'downPayment':\n                if(numRegex.test(value)){\n                    \n                    formErrors.downPaymentError = ''\n                    console.log('in downPaymentValidator+')\n                    break;\n                }else{\n\n                    formErrors.downPaymentError = 'Please enter a valid number'\n                    console.log('in downPaymentValidator-')\n                    break;\n                }\n            case 'loanTerm':\n                if(intRegex.test(value)){\n                    \n                    formErrors.loanTermError = ''\n                    console.log('in loanTermValidator+')\n                    break;\n                }else{\n\n                    formErrors.loanTermError = 'Please enter an integer'\n                    console.log('in loanTermValidator-')\n                    break;\n                }\n            case 'interestRate':\n                if(numRegex.test(value)){\n                    \n                    formErrors.interestRateError = ''\n                    console.log('in interestRateValidator+')\n                    break;\n                }else{\n\n                    formErrors.interestRateError = 'Please enter a valid number'\n                    console.log('in interestRateValidator-')\n                    break;\n                }\n            case 'propTax':\n                if(numRegex.test(value)){\n                    console.log('in propTaxValidator+')                    \n                    formErrors.propTaxError = ''\n                    break;\n                }else{\n\n                    formErrors.propTaxError = 'Please enter a valid number'\n                    console.log('in propTaxValidator-')\n                    break;\n                }\n            case 'insurance':\n                if(numRegex.test(value)){\n                    console.log('in insuranceValidator+')                    \n                    formErrors.insuranceError = ''\n                    break;\n                }else{\n                    formErrors.insuranceError = 'Please enter a valid number'\n                    console.log('in insuranceValidator-')   \n                    break;\n                }\n            case 'hoa':\n                if(numRegex.test(value)){\n                    console.log('in HOAValidator+')                    \n                    formErrors.hoaError = ''\n                    break;\n                }else{\n\n                    formErrors.hoaError = 'Please enter a valid number'\n                    console.log('in hoaValidator-')\n                    break;\n                }\n\n\n            default:\n                break;\n        }\n\n        \n        this.setState({\n            [name]:value,\n            formErrors,\n        }, console.log(this.state));\n\n\n    }\n\n\n\n    validate({ formErrors, ...rest }){\n\n\n        let valid = true;\n\n        Object.values(formErrors).forEach(val => {\n          val.length > 0 && (valid = false);\n        });\n      \n        // Object.values(rest).forEach(val => {\n        //   val === '' && (valid = false);\n        // });\n      \n        return valid;\n\n    }\n\n    reset(){\n        this.setState(this.initialState)\n        console.log(`submitted: ${this.state.submitted}`)\n\n    }\n\n    render(){\n\n        const {formErrors} = this.state\n\n        return(\n                <div className='wrapper-outer'>\n                    <Container className=\"form-wrapper form-wrapper-width\">\n                        <Row>\n                            <Col>\n                                <form className=\"m-4\" onSubmit={this.handleSubmit} noValidate >\n                                    <div className=\"faCalculator\">\n                                        <FontAwesomeIcon icon={faCalculator}  />\n                                    </div>\n                                    <h3>Mortgage Calculator</h3>\n                                    <div >\n                                        {/* <label htmlFor=\"Home Price\">Home Price: </label> */}\n                                        <input\n                                            className={formErrors.homePriceError.length > 0 ? \"error\" : null}\n                                            type=\"text\"\n                                            name=\"homePrice\"\n                                            placeholder=\"Home price ($)\"\n                                            value={this.state.homePrice}\n                                            onChange={this.handleChange}\n                                        />\n                                    </div>\n                                    {/* <div className='errorMsg'>{this.state.formErrors.homePriceError}</div> */}\n                                    <div >\n                                        {/* <label htmlFor=\"Down Payment\">Down Payment: </label> */}\n                                        <input\n                                            className={formErrors.downPaymentError.length > 0 ? \"error\" : null}\n                                            type=\"text\"\n                                            name=\"downPayment\"\n                                            placeholder=\"Down Payment ($)\"\n                                            value={this.state.downPayment}\n                                            onChange={this.handleChange}\n                                        />\n                                    </div>\n                                    {/* <div className='errorMsg'>{this.state.formErrors.downPaymentError}</div> */}\n                                    <div> \n                                        {/* <label htmlFor=\"Loan Term\">Loan Term: </label> */}\n                                        <input\n                                            className={formErrors.loanTermError.length > 0 ? \"error\" : null}\n                                            type=\"text\"\n                                            name=\"loanTerm\"\n                                            placeholder=\"Loan Term (yrs.)\"\n                                            value={this.state.loanTerm}\n                                            onChange={this.handleChange}\n\n                                        />\n                                    </div>\n                                    {/* <div className='errorMsg'>{this.state.formErrors.loanTermError}</div> */}\n                                    <div>\n                                        {/* <label htmlFor=\"interestRate\">Interest Rate: </label> */}\n                                        <input\n                                            className={formErrors.interestRateError.length > 0 ? \"error\" : null}\n                                            type=\"text\"\n                                            name=\"interestRate\"\n                                            placeholder=\"Interest Rate (%)\"\n                                            value={this.state.interestRate}\n                                            onChange={this.handleChange}\n\n                                        />\n                                    </div>\n                                    <div>\n                                        <input\n                                            className={formErrors.propTaxError.length > 0 ? \"error\" : null}\n                                            type=\"text\"\n                                            name=\"propTax\"\n                                            placeholder=\"$ Property Tax /year\"\n                                            value={this.state.propTax}\n                                            onChange={this.handleChange}\n\n                                        />\n                                    </div>\n                                    <div>\n                                        <input\n                                            className={formErrors.insuranceError.length > 0 ? \"error\" : null}\n                                            type=\"text\"\n                                            name=\"insurance\"\n                                            placeholder=\"$ Insurance /year\"\n                                            value={this.state.insurance}\n                                            onChange={this.handleChange}\n\n                                        />\n                                    </div>\n                                    <div>\n                                        <input\n                                            className={formErrors.hoaError.length > 0 ? \"error\" : null}\n                                            type=\"text\"\n                                            name=\"hoa\"\n                                            placeholder=\"$ HOA dues /mo\"\n                                            value={this.state.hoa}\n                                            onChange={this.handleChange}\n\n                                        />\n                                    </div>\n\n                                    {/* <div className='errorMsg'>{this.state.formErrors.interestRateError}</div> */}\n                                    <div>\n                                        <Button className='btnSubmit' type=\"submit\" >Submit</Button>\n                                        <Button className='btnSubmit' type=\"submit\" onClick={()=>this.reset()}>Reset</Button>\n                                    </div>\n                                </form>\n \n                            </Col>\n                        </Row>\n                    </Container>\n                    {/* {this.state.submitted ? <Calculator data={this.state}></Calculator> : \"\"} */}\n                    { this.state.submitted && <Calculator data={this.state}></Calculator> }\n\n                </div>\n        );\n    }\n}   \n\nexport default FormValidator","import React from 'react';\nimport './App.css';\nimport FormValidator from './FormValidator.js'\nimport { Container } from 'react-bootstrap';\n\n\n\n\nfunction App() {\n  return (\n    <Container className=\"wrapper\" fluid={true}>\n      <div className=\"App\">\n        <FormValidator></FormValidator>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}